---
# Prerequisites installation recipe

#- name: "[EL] Disable Indigo repo to ensure development library consistency"
#  ini_file:
#    dest: '/etc/yum.repos.d/indigo1.repo'
#    section: '{{ item.section }}'
#    option: '{{ item.option }}'
#    value: '{{ item.value }}'
#  with_items:
#     - { section: 'INDIGO-1-base', option: 'enabled', value: '0' }
#     - { section: 'INDIGO-1-updates', option: 'enabled', value: '0' }
#     - { section: 'INDIGO-1-third-party', option: 'enabled', value: '0' }
#  when: ansible_os_family == "RedHat"

#______________________________________
# Disable Selinux to have services working
- name: Disable Selinux
  selinux:
    policy: targeted
    state: permissive
  become_user: root
  become_method: sudo
  when: ansible_os_family == "RedHat"
 
#______________________________________
# Create directories
# WARNING!!! Setup directories after galaxy user creation

- include: path.yml
  when: enable_storage_advanced_options|bool == false

#______________________________________
# Check galaxy.ini or galaxy.yml to enable support for older versions

- name: Check that the galaxy.yml.sample exists
  stat:
    path: '{{ galaxy_config_path }}/galaxy.yml.sample'
  register: stat_result

- name: 'Set galaxy.yml extension to yml for conditionals'
  set_fact:
    galaxy_config_file_extension: 'yml'
    galaxy_main_section: 'galaxy'
  when: stat_result.stat.exists|bool

- name: Set galaxy_config_file to galaxy.ini if galaxy.yml not exists
  set_fact:
    galaxy_config_file: '{{ galaxy_config_path }}/galaxy.ini'
    galaxy_config_file_extension: 'ini'
    galaxy_main_section: 'app:main'
  when: not stat_result.stat.exists|bool
