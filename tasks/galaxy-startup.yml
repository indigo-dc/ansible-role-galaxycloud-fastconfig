---

# update galaxyctl if needed
- include: install_galaxyctl.yml

#______________________________________
# update galaxy-startup script
- name: Download galaxy-startup script from indigo-dc.galaxycloud
  get_url:
    url: https://raw.githubusercontent.com/indigo-dc/ansible-role-galaxycloud/master/templates/galaxy_startup.j2
    dest: /tmp/galaxy_startup.j2

- name: Update galaxy-startup script
  template:
    src: '/tmp/galaxy_startup.j2'
    dest: '{{ galaxy_custom_script_path }}/galaxy-startup'
    mode: 'a+x'
    force: yes
  become_user: root
  become_method: sudo

#______________________________________
# Stop services

- name: '[EL] Stop PostgreSQL server'
  shell: '/usr/pgsql-{{ postgresql_version }}/bin/pg_ctl -D {{ postgresql_pgdata }} stop'
  become: yes
  become_user: postgres
  when: ansible_os_family == "RedHat"

- name: '[Ubuntu] Stop PostgreSQL server'
  shell: '/etc/init.d/postgresql stop'
  become_user: root
  become_method: sudo
  when: ansible_os_family == "Debian"

#______________________________________
# Galaxy startup recipe

- name: '[VM] Enable and start PostgreSQL server'
  service:
    name: '{{ postgresql_service_name }}'
    enabled: yes
    state: started
  become_user: root
  become_method: sudo
  when: supervisor_manage_postgres == "False"

- name: '[VM] Wait PostgreSQL is up'
  wait_for:
    host: 0.0.0.0
    port: '{{ galaxy_db_port }}'
    timeout: 10
  when: ansible_virtualization_type != "docker"

- name: '[VM] Start NGINX server'
  service:
    name: nginx
    enabled: yes
    state: started
  become_user: root
  become_method: sudo
  when: supervisor_manage_nginx == "False"

- name: '[VM] Wait NGINX is up'
  wait_for:
    host: 0.0.0.0
    port: 80
    timeout: 10
  when: ansible_virtualization_type != "docker"

- name: '[VM] Enable and start the proftpd server'
  service:
    name: proftpd
    enabled: yes
    state: started
  become_user: root
  become_method: sudo
  when: supervisor_manage_proftpd == "False"

- name: '[VM] Wait proftpd is up'
  wait_for:
    host: 0.0.0.0
    port: '{{ proftpd_ftp_port }}'
    timeout: 10
  when: ansible_virtualization_type != "docker"

- name: '[VM] Start Galaxy'
  shell: "{{ galaxy_custom_script_path }}/galaxy-startup >> /tmp/galaxy-startup.log"
  become_user: root
  become_method: sudo
  when: ansible_virtualization_type != "docker"
